package com.nexage.admin.core.model;

import java.io.Serializable;
import java.util.Arrays;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Lob;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.ToString;

@Data
@Entity
@Table(name = "as_target")
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
@ToString(onlyExplicitlyIncluded = true)
@NoArgsConstructor
public class Target implements Serializable {

  public static final String TARGET_DELIMITER = ",";
  public static final String LEVEL_DELIMITER = "/";
  /** generated by eclipse */
  private static final long serialVersionUID = 3105090627474429010L;

  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  @Column(nullable = false)
  @EqualsAndHashCode.Include
  @ToString.Include
  private Long pid;

  @EqualsAndHashCode.Include private String name;

  @Column(name = "seller_id", nullable = false)
  @EqualsAndHashCode.Include
  private long sellerId;

  @Column(name = "campaign_id", nullable = false)
  @EqualsAndHashCode.Include
  private long campaignId;

  @Column(name = "target_type", nullable = false)
  @Enumerated(EnumType.ORDINAL)
  @EqualsAndHashCode.Include
  @ToString.Include
  private TargetType type;

  @Column(nullable = false)
  @Enumerated(EnumType.ORDINAL)
  @EqualsAndHashCode.Include
  @ToString.Include
  private TargetRule rule;

  @Column(nullable = false)
  @Lob
  @EqualsAndHashCode.Include
  private String filter;

  @Temporal(TemporalType.TIMESTAMP)
  @Column(nullable = false)
  @EqualsAndHashCode.Include
  private java.util.Date lastUpdate;

  public Target(Campaign campaign) {
    this.campaignId = campaign.getPid();
    this.sellerId = campaign.getSellerId();
  }

  public String getSortedFilter() {
    String sortedFilter = null;

    if (filter != null) {
      StringBuilder builder = new StringBuilder();

      List<String> targets = Arrays.asList(filter.split(Target.TARGET_DELIMITER));
      Collections.sort(targets);
      for (String target : targets) {
        if (builder.length() > 0) {
          builder.append(TARGET_DELIMITER);
        }
        builder.append(target);
      }
      sortedFilter = builder.toString();
    }

    return sortedFilter;
  }

  @PrePersist
  @PreUpdate
  protected void updateLastUpdated() {
    lastUpdate = new Date();
  }

  @AllArgsConstructor
  @Getter
  public enum TargetType {
    ZONE(0),
    COUNTRY(1),
    DEVICE(3),
    CUSTOM(5);

    private final int externalValue;

    public static TargetType getTargetType(int type) {
      for (TargetType t : TargetType.values()) {
        if (t.getExternalValue() == type) {
          return t;
        }
      }
      return CUSTOM;
    }
  }

  @AllArgsConstructor
  @Getter
  public enum TargetRule {
    IS_ANY_OF(0),
    IS_NOT_ANY_OF(1);

    private final int externalValue;
  }
}
