package com.nexage.admin.core.sparta.jpa.model;

import java.io.Serializable;
import java.util.Calendar;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.NamedQuery;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.ToString;

@Table(name = "advertiser_domain")
@NamedQuery(
    name = "getAdvertiserDomainsCreatedAfter",
    query = "SELECT ad FROM AdvertiserDomain ad WHERE ad.creationDate > :creationDate")
@NamedQuery(
    name = "findAdvertiserDomainByADomain",
    query = "SELECT ad FROM AdvertiserDomain ad WHERE ad.adomain = :adomain")
@Data
@Entity
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
@ToString(onlyExplicitlyIncluded = true)
@NoArgsConstructor
public class AdvertiserDomain implements Serializable {

  /** generated by eclipse */
  private static final long serialVersionUID = 2977262243773017469L;

  @Id @GeneratedValue @ToString.Include private Long pid;

  @Column(unique = true, length = 255)
  @NotNull
  @EqualsAndHashCode.Include
  @ToString.Include
  private String adomain;

  @Column(name = "creation_date", nullable = false)
  @Temporal(TemporalType.TIMESTAMP)
  @NotNull
  @ToString.Include
  private Date creationDate;

  @PrePersist
  public void onCreate() {
    creationDate = Calendar.getInstance().getTime();
  }
}
