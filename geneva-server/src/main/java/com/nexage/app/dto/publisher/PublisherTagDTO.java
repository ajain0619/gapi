package com.nexage.app.dto.publisher;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.nexage.admin.core.enums.Owner;
import com.nexage.admin.core.enums.ScreenLocation;
import com.nexage.admin.core.enums.TagType;
import com.nexage.admin.core.enums.VideoLinearity;
import com.nexage.admin.core.enums.VideoSupport;
import com.nexage.admin.core.util.CipherUtil;
import com.nexage.app.dto.Copyable;
import com.nexage.app.dto.Status;
import java.util.HashSet;
import java.util.Set;
import javax.crypto.Cipher;
import javax.crypto.SealedObject;
import lombok.extern.log4j.Log4j2;

@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Log4j2
public class PublisherTagDTO implements Copyable<PublisherTagDTO> {

  private Long pid;
  private Integer version;
  private PublisherSiteDTO site;
  private PublisherRTBProfileDTO rtbProfile;
  private String name;
  private Double ecpmAuto;
  private Double ecpmManual;
  private Owner owner;
  private Status status;
  private PublisherBuyerDTO buyer;
  private PublisherPositionDTO position;
  private PublisherTagControllerDTO tagController;
  private PublisherSiteDealTermDTO currentDealTerm;
  private String primaryId;
  private String primaryName;
  private String secondaryId;
  private String secondaryName;
  private Boolean videoAllowed;
  private String adSize;
  private String ecpmProvision;
  private String adNetReportUserName;
  private SealedObject adNetReportPassword;
  private String adNetReportApiKey;
  private String adNetReportApiToken;
  private Boolean insterstitial;
  private ScreenLocation screenLocation;
  private Integer height;
  private Integer width;
  private VideoSupport videoSupport;
  private VideoLinearity videoLinearity;
  private TagType tagType;
  private Set<PublisherTagRuleDTO> rules;
  private Boolean monetization;

  @JsonProperty("autogenerated")
  private Boolean isAutogenerated;

  private Boolean importRevenueFlag;
  private String buyerClass;
  private String urlTemplate;
  private String postTemplate;
  private String getTemplate;
  private String additionalPost;
  private String additionalGet;
  private String noAdRegex;
  private Boolean clickthroughDisable;
  private String adSpaceIdTemplate;
  private String adSpaceNameTemplate;
  private String postProcessTemplate;
  private String httpHeaderTemplate;
  private String buyerName;
  private String buyerLogo;
  private Boolean returnRawResponse;
  private Boolean interstitial;

  public PublisherTagDTO() {}

  private PublisherTagDTO(Builder builder) {
    this.pid = builder.pid;
    this.version = builder.version;
    this.site = builder.site;
    this.rtbProfile = builder.rtbProfile;
    this.name = builder.name;
    this.ecpmAuto = builder.ecpmAuto;
    this.ecpmManual = builder.ecpmManual;
    this.owner = builder.owner;
    this.status = builder.status;
    this.buyer = builder.buyer;
    this.position = builder.position;
    this.rules = builder.rules;
    this.primaryId = builder.primaryId;
    this.primaryName = builder.primaryName;
    this.secondaryId = builder.secondaryId;
    this.secondaryName = builder.secondaryName;
    this.videoAllowed = builder.videoAllowed;
    this.adSize = builder.adSize;
    this.ecpmProvision = builder.ecpmProvision;
    this.adNetReportUserName = builder.adNetReportUserName;
    this.adNetReportPassword = builder.adNetReportPassword;
    this.insterstitial = builder.insterstitial;
    this.tagType = builder.tagType;
    this.screenLocation = builder.screenLocation;
    this.height = builder.height;
    this.width = builder.width;
    this.videoSupport = builder.videoSupport;
    this.videoLinearity = builder.videoLinearity;
    this.adNetReportApiKey = builder.apiKey;
    this.adNetReportApiToken = builder.apiToken;
    this.monetization = builder.monetization;
    this.isAutogenerated = builder.isAutogenerated;
    this.importRevenueFlag = builder.importRevenueFlag;
    this.tagController = builder.tagController;
    this.buyerClass = builder.buyerClass;
    this.urlTemplate = builder.urlTemplate;
    this.postTemplate = builder.postTemplate;
    this.getTemplate = builder.getTemplate;
    this.additionalPost = builder.additionalPost;
    this.additionalGet = builder.additionalGet;
    this.noAdRegex = builder.noAdRegex;
    this.clickthroughDisable = builder.clickthroughDisable;
    this.adSpaceIdTemplate = builder.adSpaceIdTemplate;
    this.adSpaceNameTemplate = builder.adSpaceNameTemplate;
    this.postProcessTemplate = builder.postProcessTemplate;
    this.httpHeaderTemplate = builder.httpHeaderTemplate;
    this.buyerName = builder.buyerName;
    this.buyerLogo = builder.buyerLogo;
    this.returnRawResponse = builder.returnRawResponse;
    this.interstitial = builder.interstitial;
    this.currentDealTerm = builder.currentDealTerm;
  }

  public String getBuyerClass() {
    return buyerClass;
  }

  public void setBuyerClass(String buyerClass) {
    this.buyerClass = buyerClass;
  }

  public String getUrlTemplate() {
    return urlTemplate;
  }

  public void setUrlTemplate(String urlTemplate) {
    this.urlTemplate = urlTemplate;
  }

  public String getPostTemplate() {
    return postTemplate;
  }

  public void setPostTemplate(String postTemplate) {
    this.postTemplate = postTemplate;
  }

  public String getGetTemplate() {
    return getTemplate;
  }

  public void setGetTemplate(String getTemplate) {
    this.getTemplate = getTemplate;
  }

  public String getAdditionalPost() {
    return additionalPost;
  }

  public void setAdditionalPost(String additionalPost) {
    this.additionalPost = additionalPost;
  }

  public String getAdditionalGet() {
    return additionalGet;
  }

  public void setAdditionalGet(String additionalGet) {
    this.additionalGet = additionalGet;
  }

  public String getNoAdRegex() {
    return noAdRegex;
  }

  public void setNoAdRegex(String noAdRegex) {
    this.noAdRegex = noAdRegex;
  }

  public Boolean getClickthroughDisable() {
    return clickthroughDisable;
  }

  public void setClickthroughDisable(Boolean clickthroughDisable) {
    this.clickthroughDisable = clickthroughDisable;
  }

  public String getAdSpaceIdTemplate() {
    return adSpaceIdTemplate;
  }

  public void setAdSpaceIdTemplate(String adSpaceIdTemplate) {
    this.adSpaceIdTemplate = adSpaceIdTemplate;
  }

  public String getAdSpaceNameTemplate() {
    return adSpaceNameTemplate;
  }

  public void setAdSpaceNameTemplate(String adSpaceNameTemplate) {
    this.adSpaceNameTemplate = adSpaceNameTemplate;
  }

  public String getPostProcessTemplate() {
    return postProcessTemplate;
  }

  public void setPostProcessTemplate(String postProcessTemplate) {
    this.postProcessTemplate = postProcessTemplate;
  }

  public String getHttpHeaderTemplate() {
    return httpHeaderTemplate;
  }

  public void setHttpHeaderTemplate(String httpHeaderTemplate) {
    this.httpHeaderTemplate = httpHeaderTemplate;
  }

  public String getBuyerName() {
    return buyerName;
  }

  public void setBuyerName(String buyerName) {
    this.buyerName = buyerName;
  }

  public String getBuyerLogo() {
    return buyerLogo;
  }

  public void setBuyerLogo(String buyerLogo) {
    this.buyerLogo = buyerLogo;
  }

  public Boolean getReturnRawResponse() {
    return returnRawResponse;
  }

  public void setReturnRawResponse(Boolean returnRawResponse) {
    this.returnRawResponse = returnRawResponse;
  }

  public Boolean getInterstitial() {
    return interstitial;
  }

  public void setInterstitial(Boolean interstitial) {
    this.interstitial = interstitial;
  }

  public Long getPid() {
    return pid;
  }

  public Integer getVersion() {
    return version;
  }

  public PublisherSiteDTO getSite() {
    return site;
  }

  public PublisherRTBProfileDTO getRtbProfile() {
    return rtbProfile;
  }

  public String getName() {
    return name;
  }

  public Double getEcpmAuto() {
    return ecpmAuto;
  }

  public Double getEcpmManual() {
    return ecpmManual;
  }

  public Owner getOwner() {
    return owner;
  }

  public Status getStatus() {
    return status;
  }

  public PublisherBuyerDTO getBuyer() {
    return buyer;
  }

  public PublisherPositionDTO getPosition() {
    return position;
  }

  public Set<PublisherTagRuleDTO> getRules() {
    return rules;
  }

  public String getPrimaryId() {
    return primaryId;
  }

  public String getPrimaryName() {
    return primaryName;
  }

  public String getSecondaryId() {
    return secondaryId;
  }

  public String getSecondaryName() {
    return secondaryName;
  }

  public Boolean getVideoAllowed() {
    return videoAllowed;
  }

  public String getAdSize() {
    return adSize;
  }

  public String getEcpmProvision() {
    return ecpmProvision;
  }

  public String getAdNetReportUserName() {
    return adNetReportUserName;
  }

  @JsonProperty("adNetReportPassword")
  public String getAdNetReportPassword() {
    try {
      return adNetReportPassword != null
          ? (String) adNetReportPassword.getObject(CipherUtil.getCipher(Cipher.DECRYPT_MODE))
          : null;
    } catch (Exception ex) {
      log.error("Failed to get password", ex);
      return null;
    }
  }

  public Boolean getInsterstitial() {
    return insterstitial;
  }

  public TagType getType() {
    return tagType;
  }

  public ScreenLocation getScreenLocation() {
    return screenLocation;
  }

  public Integer getHeight() {
    return height;
  }

  public Integer getWidth() {
    return width;
  }

  public VideoSupport getVideoSupport() {
    return videoSupport;
  }

  public VideoLinearity getVideoLinearity() {
    return videoLinearity;
  }

  public TagType getTagType() {
    return tagType;
  }

  public Boolean getMonetization() {
    return monetization;
  }

  public PublisherTagControllerDTO getTagController() {
    return tagController;
  }

  public Boolean getImportRevenueFlag() {
    return this.importRevenueFlag;
  }

  public String getAdNetReportApiKey() {
    return adNetReportApiKey;
  }

  public String getAdNetReportApiToken() {
    return adNetReportApiToken;
  }

  public Boolean getAutogenerated() {
    return isAutogenerated;
  }

  public Boolean isAutogenerated() {
    return isAutogenerated;
  }

  public PublisherSiteDealTermDTO getCurrentDealTerm() {
    return currentDealTerm;
  }

  public void setPid(Long pid) {
    this.pid = pid;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }

  public void setSite(PublisherSiteDTO site) {
    this.site = site;
  }

  public void setRtbProfile(PublisherRTBProfileDTO rtbProfile) {
    this.rtbProfile = rtbProfile;
  }

  public void setName(String name) {
    this.name = name;
  }

  public void setEcpmAuto(Double ecpmAuto) {
    this.ecpmAuto = ecpmAuto;
  }

  public void setEcpmManual(Double ecpmManual) {
    this.ecpmManual = ecpmManual;
  }

  public void setOwner(Owner owner) {
    this.owner = owner;
  }

  public void setStatus(Status status) {
    this.status = status;
  }

  public void setBuyer(PublisherBuyerDTO buyer) {
    this.buyer = buyer;
  }

  public void setPosition(PublisherPositionDTO position) {
    this.position = position;
  }

  public void setTagController(PublisherTagControllerDTO tagController) {
    this.tagController = tagController;
  }

  public void setPrimaryId(String primaryId) {
    this.primaryId = primaryId;
  }

  public void setPrimaryName(String primaryName) {
    this.primaryName = primaryName;
  }

  public void setSecondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
  }

  public void setSecondaryName(String secondaryName) {
    this.secondaryName = secondaryName;
  }

  public void setVideoAllowed(Boolean videoAllowed) {
    this.videoAllowed = videoAllowed;
  }

  public void setAdSize(String adSize) {
    this.adSize = adSize;
  }

  public void setEcpmProvision(String ecpmProvision) {
    this.ecpmProvision = ecpmProvision;
  }

  public void setAdNetReportUserName(String adNetReportUserName) {
    this.adNetReportUserName = adNetReportUserName;
  }

  public void setAdNetReportPassword(String adNetReportPassword) {
    try {
      this.adNetReportPassword =
          new SealedObject(adNetReportPassword, CipherUtil.getCipher(Cipher.ENCRYPT_MODE));
    } catch (Exception ex) {
      log.error("Failed to set pasword", ex);
    }
  }

  public void setAdNetReportApiKey(String adNetReportApiKey) {
    this.adNetReportApiKey = adNetReportApiKey;
  }

  public void setAdNetReportApiToken(String adNetReportApiToken) {
    this.adNetReportApiToken = adNetReportApiToken;
  }

  public void setInsterstitial(Boolean insterstitial) {
    this.insterstitial = insterstitial;
  }

  public void setScreenLocation(ScreenLocation screenLocation) {
    this.screenLocation = screenLocation;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }

  public void setVideoSupport(VideoSupport videoSupport) {
    this.videoSupport = videoSupport;
  }

  public void setVideoLinearity(VideoLinearity videoLinearity) {
    this.videoLinearity = videoLinearity;
  }

  public void setTagType(TagType tagType) {
    this.tagType = tagType;
  }

  public void setRules(Set<PublisherTagRuleDTO> rules) {
    this.rules = rules;
  }

  public void setMonetization(Boolean monetization) {
    this.monetization = monetization;
  }

  public void setAutogenerated(Boolean autogenerated) {
    isAutogenerated = autogenerated;
  }

  public void setImportRevenueFlag(Boolean importRevenueFlag) {
    this.importRevenueFlag = importRevenueFlag;
  }

  public void setCurrentDealTerm(PublisherSiteDealTermDTO currentDealTerm) {
    this.currentDealTerm = currentDealTerm;
  }

  public static Builder newBuilder() {
    return new Builder();
  }

  public static final class Builder {

    private Long pid;
    private Integer version;
    private PublisherSiteDTO site;
    private PublisherRTBProfileDTO rtbProfile;
    private String name;
    private Double ecpmAuto;
    private Double ecpmManual;
    private Owner owner;
    private Status status;
    private PublisherBuyerDTO buyer;
    private PublisherPositionDTO position;
    private Set<PublisherTagRuleDTO> rules;
    private PublisherTagControllerDTO tagController;
    private PublisherSiteDealTermDTO currentDealTerm;

    private String primaryId;
    private String primaryName;
    private String secondaryId;
    private String secondaryName;
    private Boolean videoAllowed;
    private String adSize;
    private String ecpmProvision;
    private String adNetReportUserName;
    private SealedObject adNetReportPassword;
    private Boolean insterstitial;

    private ScreenLocation screenLocation;
    private Integer height;
    private Integer width;
    private VideoSupport videoSupport;
    private VideoLinearity videoLinearity;
    private String apiKey;
    private String apiToken;
    private TagType tagType;
    private Boolean monetization;
    private Boolean isAutogenerated = false;
    private Boolean importRevenueFlag = null;

    // additional fields
    private String buyerClass;
    private String urlTemplate;
    private String postTemplate;
    private String getTemplate;
    private String additionalPost;
    private String additionalGet;
    private String noAdRegex;
    private Boolean clickthroughDisable;
    private String adSpaceIdTemplate;
    private String adSpaceNameTemplate;
    private String postProcessTemplate;
    private String httpHeaderTemplate;
    private String buyerName;
    private String buyerLogo;
    private Boolean returnRawResponse;
    private Boolean interstitial;

    public Builder withBuyerClass(String buyerClass) {
      this.buyerClass = buyerClass;
      return this;
    }

    public Builder withUrlTemplate(String urlTemplate) {
      this.urlTemplate = urlTemplate;
      return this;
    }

    public Builder withPostTemplate(String postTemplate) {
      this.postTemplate = postTemplate;
      return this;
    }

    public Builder withGetTemplate(String getTemplate) {
      this.getTemplate = getTemplate;
      return this;
    }

    public Builder withAdditionalPost(String additionalPost) {
      this.additionalPost = additionalPost;
      return this;
    }

    public Builder withAdditionalGet(String additionalGet) {
      this.additionalGet = additionalGet;
      return this;
    }

    public Builder withNoAdRegex(String noAdRegex) {
      this.noAdRegex = noAdRegex;
      return this;
    }

    public Builder withClickthroughDisable(Boolean clickthroughDisable) {
      this.clickthroughDisable = clickthroughDisable;
      return this;
    }

    public Builder withAdSpaceIdTemplate(String adSpaceIdTemplate) {
      this.adSpaceIdTemplate = adSpaceIdTemplate;
      return this;
    }

    public Builder withAdSpaceNameTemplate(String adSpaceNameTemplate) {
      this.adSpaceNameTemplate = adSpaceNameTemplate;
      return this;
    }

    public Builder withPostProcessTemplate(String postProcessTemplate) {
      this.postProcessTemplate = postProcessTemplate;
      return this;
    }

    public Builder withHttpHeaderTemplate(String httpHeaderTemplate) {
      this.httpHeaderTemplate = httpHeaderTemplate;
      return this;
    }

    public Builder withBuyerName(String buyerName) {
      this.buyerName = buyerName;
      return this;
    }

    public Builder withBuyerLogo(String buyerLogo) {
      this.buyerLogo = buyerLogo;
      return this;
    }

    public Builder withReturnRawResponse(Boolean returnRawResponse) {
      this.returnRawResponse = returnRawResponse;
      return this;
    }

    public Builder withInterstitial(Boolean interstitial) {
      this.interstitial = interstitial;
      return this;
    }

    public Builder withTagController(PublisherTagControllerDTO tagController) {
      this.tagController = tagController;
      return this;
    }

    public Builder withPid(Long pid) {
      this.pid = pid;
      return this;
    }

    public Builder withVersion(Integer version) {
      this.version = version;
      return this;
    }

    public Builder withSite(PublisherSiteDTO site) {
      this.site = site;
      return this;
    }

    public Builder withRtbProfile(PublisherRTBProfileDTO rtbProfile) {
      this.rtbProfile = rtbProfile;
      return this;
    }

    public Builder withTagType(TagType tagType) {
      this.tagType = tagType;
      return this;
    }

    public Builder withName(String name) {
      this.name = name;
      return this;
    }

    public Builder withEcpmAuto(Double ecpmAuto) {
      this.ecpmAuto = ecpmAuto;
      return this;
    }

    public Builder withEcpmManual(Double ecpmManual) {
      this.ecpmManual = ecpmManual;
      return this;
    }

    public Builder withOwner(Owner owner) {
      this.owner = owner;
      return this;
    }

    public Builder withStatus(Status status) {
      this.status = status;
      return this;
    }

    public Builder withBuyer(PublisherBuyerDTO buyer) {
      this.buyer = buyer;
      return this;
    }

    public Builder withTagRule(PublisherTagRuleDTO rule) {
      if (rules == null) {
        rules = new HashSet<>();
      }
      rules.add(rule);
      return this;
    }

    public Builder withPosition(PublisherPositionDTO position) {
      this.position = position;
      return this;
    }

    public Builder withPrimaryId(String primaryId) {
      this.primaryId = primaryId;
      return this;
    }

    public Builder withPrimaryName(String primaryName) {
      this.primaryName = primaryName;
      return this;
    }

    public Builder withSecondaryId(String secondaryId) {
      this.secondaryId = secondaryId;
      return this;
    }

    public Builder withSecondaryName(String secondaryName) {
      this.secondaryName = secondaryName;
      return this;
    }

    public Builder withVideoAllowed(Boolean videoAllowed) {
      this.videoAllowed = videoAllowed;
      return this;
    }

    public Builder withAdSize(String adSize) {
      this.adSize = adSize;
      return this;
    }

    public Builder withEcpmProvision(String ecpmProvision) {
      this.ecpmProvision = ecpmProvision;
      return this;
    }

    public Builder withAdNetReportUserName(String adNetReportUserName) {
      this.adNetReportUserName = adNetReportUserName;
      return this;
    }

    public Builder withAdNetReportPassword(String adNetReportPassword) {
      try {
        this.adNetReportPassword =
            new SealedObject(adNetReportPassword, CipherUtil.getCipher(Cipher.ENCRYPT_MODE));
      } catch (Exception ex) {
        log.error("Failed to set password", ex);
      }

      return this;
    }

    public Builder withAdNetReportApiKey(String apiKey) {
      this.apiKey = apiKey;
      return this;
    }

    public Builder withAdNetReportApiToken(String apiToken) {
      this.apiToken = apiToken;
      return this;
    }

    public Builder withInsterstitial(Boolean insterstitial) {
      this.insterstitial = insterstitial;
      return this;
    }

    public Builder withScreenLocation(ScreenLocation screenLocation) {
      this.screenLocation = screenLocation;
      return this;
    }

    public Builder withHeight(Integer height) {
      this.height = height;
      return this;
    }

    public Builder withWidth(Integer width) {
      this.width = width;
      return this;
    }

    public Builder withVideoSupport(VideoSupport videoSupport) {
      this.videoSupport = videoSupport;
      return this;
    }

    public Builder withVideoLinearity(VideoLinearity videoLinearity) {
      this.videoLinearity = videoLinearity;
      return this;
    }

    public Builder withMonetization(Boolean monetization) {
      this.monetization = monetization;
      return this;
    }

    public Builder withIsAutoGenerated(Boolean isAuto) {
      this.isAutogenerated = isAuto;
      return this;
    }

    public Builder withImportRevenueFlag(Boolean flag) {
      this.importRevenueFlag = flag;
      return this;
    }

    public Builder withCurrentDealTerm(PublisherSiteDealTermDTO publisherSiteDealTerm) {
      this.currentDealTerm = publisherSiteDealTerm;
      return this;
    }

    public PublisherTagDTO build() {
      return new PublisherTagDTO(this);
    }
  }

  @Override
  public PublisherTagDTO copy(PublisherTagDTO original) {
    PublisherTagDTO copy = original;
    copy.pid = null;
    copy.version = null;
    if (copy.getRules() != null) {
      Set<PublisherTagRuleDTO> pubRules = new HashSet<PublisherTagRuleDTO>(copy.getRules());
      copy.getRules().clear();
      for (PublisherTagRuleDTO rule : pubRules) {
        copy.rules.add(rule.copy(rule));
      }
    }
    return copy;
  }
}
